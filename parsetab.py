
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOP_ATRIBleftOP_LOG_BTOP_LOG_LTOP_LOG_BT_EOP_LOG_LT_EOP_LOG_DIFFleftOP_ADDOP_SUBleftOP_MULOP_DIVleftPAR_OPENPAR_CLOSEleftOP_EXPEM EOF ERROR FACA FALSE FLOAT_NUMBER ID INT_NUMBER KW_BOOLEAN KW_CLOSE KW_ELSE KW_END_LINE KW_FLOAT KW_FOR_CLOSE KW_FOR_OPEN KW_FUNCTION KW_FUNC_OPEN KW_FUNC_OPEN_ARGS KW_IF KW_IF_OPEN KW_INPUT KW_INT KW_PRINT KW_RETURN KW_STRING KW_WHILE OP_ADD OP_ATRIB OP_DEC OP_DIV OP_EXP OP_INC OP_LOG_AND OP_LOG_BT OP_LOG_BT_E OP_LOG_DIFF OP_LOG_EQUAL OP_LOG_LT OP_LOG_LT_E OP_LOG_NOT OP_LOG_OR OP_MUL OP_SUB PAR_CLOSE PAR_OPEN STRING TRUE VIRGULA\n        programa : lista_declaracoes\n    \n    lista_declaracoes : declaracao lista_declaracoes\n                      | declaracao\n    \n    declaracao : expressao KW_END_LINE\n               | declaracao KW_END_LINE\n               | declaracao_if KW_END_LINE\n               | declaracao_for KW_END_LINE\n               | declaracao_while KW_END_LINE\n               | declaracao_print\n               | declaracao_ler KW_END_LINE\n               | atribuicao KW_END_LINE\n               | declaracao_variavel_sem_valores KW_END_LINE\n               | expressao_booleana KW_END_LINE\n               | declaracao_funcao KW_END_LINE\n               | retorna KW_END_LINE\n    \n    expressao : expressao OP_ADD expressao\n              | expressao OP_SUB expressao\n              | expressao OP_MUL expressao\n              | expressao OP_DIV expressao\n              | expressao OP_EXP expressao\n              | OP_INC ID\n              | OP_DEC ID\n              | KW_INT\n              | KW_FLOAT\n              | KW_STRING\n              | boolean\n              | expressao_booleana\n              | ID\n    \n    expressao_booleana : expressao OP_LOG_BT_E expressao\n                       | expressao OP_LOG_LT_E expressao\n                       | expressao OP_LOG_EQUAL expressao\n                       | expressao OP_LOG_DIFF expressao\n                       | expressao OP_LOG_LT expressao\n                       | expressao OP_LOG_BT expressao\n                       | expressao OP_LOG_OR expressao\n    \n    boolean : TRUE\n            | FALSE\n    \n    atribuicao : ID OP_ATRIB expressao\n               | atribuicao VIRGULA atribuicao\n    \n    declaracao_variavel_sem_valores : KW_FLOAT ID\n                                    | KW_INT ID\n    \n    criacao_variavel : tipo ID OP_ATRIB expressao\n    \n    criacao_variaveis : tipo ID OP_ATRIB expressao VIRGULA atribuicao\n    \n    expressao : PAR_OPEN expressao PAR_CLOSE\n    \n    tipo : KW_INT\n         | KW_BOOLEAN\n         | KW_FLOAT\n         | KW_STRING\n\n    \n    declaracao_if : KW_IF expressao_booleana KW_IF_OPEN lista_declaracoes KW_CLOSE\n    \n    declaracao_if : KW_IF expressao_booleana KW_IF_OPEN lista_declaracoes KW_ELSE lista_declaracoes KW_CLOSE\n    \n    declaracao_print : KW_PRINT parametros KW_END_LINE\n    \n    declaracao_ler : KW_INPUT ID\n    \n    declaracao_for : KW_FOR_OPEN ID EM expressao FACA lista_declaracoes KW_CLOSE\n    \n    declaracao_while : KW_WHILE expressao_booleana FACA lista_declaracoes KW_CLOSE\n    \n    declaracao_funcao : KW_FUNCTION ID KW_FUNC_OPEN lista_declaracoes KW_CLOSE\n    \n    declaracao_funcao : KW_FUNCTION ID KW_FUNC_OPEN_ARGS lista_declaracoes KW_CLOSE\n    \n    expressao : ID KW_FUNC_OPEN_ARGS parametros\n    \n    retorna : KW_RETURN expressao\n    \n    parametros : expressao\n               | parametros VIRGULA parametros\n    '
    
_lr_action_items = {'OP_INC':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[15,15,-9,15,15,15,15,15,-5,-4,15,15,15,15,15,15,15,15,15,15,15,15,-6,-7,-8,-10,-11,-12,-13,-14,-15,15,15,15,15,15,-51,15,15,15,15,15,]),'OP_DEC':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[17,17,-9,17,17,17,17,17,-5,-4,17,17,17,17,17,17,17,17,17,17,17,17,-6,-7,-8,-10,-11,-12,-13,-14,-15,17,17,17,17,17,-51,17,17,17,17,17,]),'KW_INT':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[18,18,-9,65,65,65,65,65,-5,-4,65,65,65,65,65,65,65,65,65,65,65,65,-6,-7,-8,-10,-11,-12,-13,-14,-15,65,65,18,65,18,-51,65,18,18,18,18,]),'KW_FLOAT':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[19,19,-9,66,66,66,66,66,-5,-4,66,66,66,66,66,66,66,66,66,66,66,66,-6,-7,-8,-10,-11,-12,-13,-14,-15,66,66,19,66,19,-51,66,19,19,19,19,]),'KW_STRING':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[20,20,-9,20,20,20,20,20,-5,-4,20,20,20,20,20,20,20,20,20,20,20,20,-6,-7,-8,-10,-11,-12,-13,-14,-15,20,20,20,20,20,-51,20,20,20,20,20,]),'ID':([0,3,8,15,17,18,19,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[16,16,-9,57,60,61,62,64,64,70,64,64,74,75,64,-5,-4,64,64,64,64,64,64,64,64,64,64,64,64,-6,-7,-8,-10,-11,90,-12,-13,-14,-15,64,64,16,64,16,-51,64,16,16,16,16,]),'PAR_OPEN':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[22,22,-9,22,22,22,22,22,-5,-4,22,22,22,22,22,22,22,22,22,22,22,22,-6,-7,-8,-10,-11,-12,-13,-14,-15,22,22,22,22,22,-51,22,22,22,22,22,]),'KW_IF':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[23,23,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,23,23,-51,23,23,23,23,]),'KW_FOR_OPEN':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[24,24,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,24,24,-51,24,24,24,24,]),'KW_WHILE':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[25,25,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,25,25,-51,25,25,25,25,]),'KW_PRINT':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[26,26,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,26,26,-51,26,26,26,26,]),'KW_INPUT':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[27,27,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,27,27,-51,27,27,27,27,]),'KW_FUNCTION':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[28,28,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,28,28,-51,28,28,28,28,]),'KW_RETURN':([0,3,8,33,34,47,48,49,50,51,53,54,55,56,94,96,97,99,100,108,109,],[29,29,-9,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,29,29,-51,29,29,29,29,]),'TRUE':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[30,30,-9,30,30,30,30,30,-5,-4,30,30,30,30,30,30,30,30,30,30,30,30,-6,-7,-8,-10,-11,-12,-13,-14,-15,30,30,30,30,30,-51,30,30,30,30,30,]),'FALSE':([0,3,8,22,23,25,26,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,94,95,96,97,98,99,100,108,109,],[31,31,-9,31,31,31,31,31,-5,-4,31,31,31,31,31,31,31,31,31,31,31,31,-6,-7,-8,-10,-11,-12,-13,-14,-15,31,31,31,31,31,-51,31,31,31,31,31,]),'$end':([1,2,3,8,32,33,34,47,48,49,50,51,53,54,55,56,97,],[0,-1,-3,-9,-2,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-51,]),'KW_CLOSE':([3,8,32,33,34,47,48,49,50,51,53,54,55,56,97,101,103,105,106,113,114,],[-3,-9,-2,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-51,107,110,111,112,115,116,]),'KW_ELSE':([3,8,32,33,34,47,48,49,50,51,53,54,55,56,97,101,],[-3,-9,-2,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-51,108,]),'KW_END_LINE':([3,4,5,6,7,8,9,10,11,12,13,14,16,18,19,20,21,30,31,33,34,47,48,49,50,51,53,54,55,56,57,60,61,62,64,65,66,67,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,97,104,107,110,111,112,115,116,],[33,34,47,48,49,-9,50,51,53,54,55,56,-28,-23,-24,-25,-26,-36,-37,-5,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-21,-22,-41,-40,-28,-23,-24,-27,97,-59,-52,-58,-16,-17,-18,-19,-20,-29,-30,-31,-32,-33,-34,-35,-39,-57,-38,-44,-51,-60,-49,-54,-55,-56,-50,-53,]),'OP_ADD':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[35,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,35,-28,-23,-24,-27,-27,35,-27,35,35,-16,-17,-18,-19,-20,35,35,35,35,35,35,35,-57,35,-44,35,-60,]),'OP_SUB':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[36,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,36,-28,-23,-24,-27,-27,36,-27,36,36,-16,-17,-18,-19,-20,36,36,36,36,36,36,36,-57,36,-44,36,-60,]),'OP_MUL':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[37,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,37,-28,-23,-24,-27,-27,37,-27,37,37,37,37,-18,-19,-20,37,37,37,37,37,37,37,-57,37,-44,37,-60,]),'OP_DIV':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[38,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,38,-28,-23,-24,-27,-27,38,-27,38,38,38,38,-18,-19,-20,38,38,38,38,38,38,38,-57,38,-44,38,-60,]),'OP_EXP':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[39,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,39,-28,-23,-24,-27,-27,39,-27,39,39,39,39,39,39,-20,39,39,39,39,39,39,39,-57,39,-44,39,-60,]),'OP_LOG_BT_E':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[40,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,40,-28,-23,-24,-27,-27,40,-27,40,40,-16,-17,-18,-19,-20,-29,-30,40,-32,-33,-34,40,-57,40,-44,40,-60,]),'OP_LOG_LT_E':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[41,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,41,-28,-23,-24,-27,-27,41,-27,41,41,-16,-17,-18,-19,-20,-29,-30,41,-32,-33,-34,41,-57,41,-44,41,-60,]),'OP_LOG_EQUAL':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[42,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,42,-28,-23,-24,-27,-27,42,-27,42,42,-16,-17,-18,-19,-20,-29,-30,42,-32,-33,-34,42,-57,42,-44,42,-60,]),'OP_LOG_DIFF':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[43,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,43,-28,-23,-24,-27,-27,43,-27,43,43,-16,-17,-18,-19,-20,-29,-30,43,-32,-33,-34,43,-57,43,-44,43,-60,]),'OP_LOG_LT':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[44,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,44,-28,-23,-24,-27,-27,44,-27,44,44,-16,-17,-18,-19,-20,-29,-30,44,-32,-33,-34,44,-57,44,-44,44,-60,]),'OP_LOG_BT':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[45,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,45,-28,-23,-24,-27,-27,45,-27,45,45,-16,-17,-18,-19,-20,-29,-30,45,-32,-33,-34,45,-57,45,-44,45,-60,]),'OP_LOG_OR':([4,12,16,18,19,20,21,30,31,57,60,63,64,65,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,102,104,],[46,-27,-28,-23,-24,-25,-26,-36,-37,-21,-22,46,-28,-23,-24,-27,-27,46,-27,46,46,-16,-17,-18,-19,-20,-29,-30,46,-32,-33,-34,46,-57,46,-44,46,-60,]),'VIRGULA':([10,20,21,30,31,57,60,64,65,66,67,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,104,],[52,-25,-26,-36,-37,-21,-22,-28,-23,-24,-27,98,-59,-16,-17,-18,-19,-20,-29,-30,-31,-32,-33,-34,-35,52,98,-38,-44,98,]),'KW_FUNC_OPEN_ARGS':([16,64,75,],[58,58,100,]),'OP_ATRIB':([16,90,],[59,59,]),'PAR_CLOSE':([20,21,30,31,57,60,63,64,65,66,67,73,77,78,79,80,81,82,83,84,85,86,87,88,91,93,104,],[-25,-26,-36,-37,-21,-22,93,-28,-23,-24,-27,-59,-16,-17,-18,-19,-20,-29,-30,-31,-32,-33,-34,-35,-57,-44,-60,]),'KW_IF_OPEN':([20,21,30,31,57,60,64,65,66,67,68,73,77,78,79,80,81,82,83,84,85,86,87,88,91,93,104,],[-25,-26,-36,-37,-21,-22,-28,-23,-24,-27,94,-59,-16,-17,-18,-19,-20,-29,-30,-31,-32,-33,-34,-35,-57,-44,-60,]),'FACA':([20,21,30,31,57,60,64,65,66,67,71,73,77,78,79,80,81,82,83,84,85,86,87,88,91,93,102,104,],[-25,-26,-36,-37,-21,-22,-28,-23,-24,-27,96,-59,-16,-17,-18,-19,-20,-29,-30,-31,-32,-33,-34,-35,-57,-44,109,-60,]),'EM':([70,],[95,]),'KW_FUNC_OPEN':([75,],[99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaracoes':([0,3,94,96,99,100,108,109,],[2,32,101,103,105,106,113,114,]),'declaracao':([0,3,94,96,99,100,108,109,],[3,3,3,3,3,3,3,3,]),'expressao':([0,3,22,23,25,26,29,35,36,37,38,39,40,41,42,43,44,45,46,58,59,94,95,96,98,99,100,108,109,],[4,4,63,69,69,73,76,77,78,79,80,81,82,83,84,85,86,87,88,73,92,4,102,4,73,4,4,4,4,]),'declaracao_if':([0,3,94,96,99,100,108,109,],[5,5,5,5,5,5,5,5,]),'declaracao_for':([0,3,94,96,99,100,108,109,],[6,6,6,6,6,6,6,6,]),'declaracao_while':([0,3,94,96,99,100,108,109,],[7,7,7,7,7,7,7,7,]),'declaracao_print':([0,3,94,96,99,100,108,109,],[8,8,8,8,8,8,8,8,]),'declaracao_ler':([0,3,94,96,99,100,108,109,],[9,9,9,9,9,9,9,9,]),'atribuicao':([0,3,52,94,96,99,100,108,109,],[10,10,89,10,10,10,10,10,10,]),'declaracao_variavel_sem_valores':([0,3,94,96,99,100,108,109,],[11,11,11,11,11,11,11,11,]),'expressao_booleana':([0,3,22,23,25,26,29,35,36,37,38,39,40,41,42,43,44,45,46,58,59,94,95,96,98,99,100,108,109,],[12,12,67,68,71,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,12,67,12,67,12,12,12,12,]),'declaracao_funcao':([0,3,94,96,99,100,108,109,],[13,13,13,13,13,13,13,13,]),'retorna':([0,3,94,96,99,100,108,109,],[14,14,14,14,14,14,14,14,]),'boolean':([0,3,22,23,25,26,29,35,36,37,38,39,40,41,42,43,44,45,46,58,59,94,95,96,98,99,100,108,109,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'parametros':([26,58,98,],[72,91,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaracoes','programa',1,'p_programa','Analisador_Sintatico.py',52),
  ('lista_declaracoes -> declaracao lista_declaracoes','lista_declaracoes',2,'p_lista','Analisador_Sintatico.py',60),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista','Analisador_Sintatico.py',61),
  ('declaracao -> expressao KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',72),
  ('declaracao -> declaracao KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',73),
  ('declaracao -> declaracao_if KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',74),
  ('declaracao -> declaracao_for KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',75),
  ('declaracao -> declaracao_while KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',76),
  ('declaracao -> declaracao_print','declaracao',1,'p_declaracao','Analisador_Sintatico.py',77),
  ('declaracao -> declaracao_ler KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',78),
  ('declaracao -> atribuicao KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',79),
  ('declaracao -> declaracao_variavel_sem_valores KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',80),
  ('declaracao -> expressao_booleana KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',81),
  ('declaracao -> declaracao_funcao KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',82),
  ('declaracao -> retorna KW_END_LINE','declaracao',2,'p_declaracao','Analisador_Sintatico.py',83),
  ('expressao -> expressao OP_ADD expressao','expressao',3,'p_operacoes_aritmetica','Analisador_Sintatico.py',91),
  ('expressao -> expressao OP_SUB expressao','expressao',3,'p_operacoes_aritmetica','Analisador_Sintatico.py',92),
  ('expressao -> expressao OP_MUL expressao','expressao',3,'p_operacoes_aritmetica','Analisador_Sintatico.py',93),
  ('expressao -> expressao OP_DIV expressao','expressao',3,'p_operacoes_aritmetica','Analisador_Sintatico.py',94),
  ('expressao -> expressao OP_EXP expressao','expressao',3,'p_operacoes_aritmetica','Analisador_Sintatico.py',95),
  ('expressao -> OP_INC ID','expressao',2,'p_operacoes_aritmetica','Analisador_Sintatico.py',96),
  ('expressao -> OP_DEC ID','expressao',2,'p_operacoes_aritmetica','Analisador_Sintatico.py',97),
  ('expressao -> KW_INT','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',98),
  ('expressao -> KW_FLOAT','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',99),
  ('expressao -> KW_STRING','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',100),
  ('expressao -> boolean','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',101),
  ('expressao -> expressao_booleana','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',102),
  ('expressao -> ID','expressao',1,'p_operacoes_aritmetica','Analisador_Sintatico.py',103),
  ('expressao_booleana -> expressao OP_LOG_BT_E expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',164),
  ('expressao_booleana -> expressao OP_LOG_LT_E expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',165),
  ('expressao_booleana -> expressao OP_LOG_EQUAL expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',166),
  ('expressao_booleana -> expressao OP_LOG_DIFF expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',167),
  ('expressao_booleana -> expressao OP_LOG_LT expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',168),
  ('expressao_booleana -> expressao OP_LOG_BT expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',169),
  ('expressao_booleana -> expressao OP_LOG_OR expressao','expressao_booleana',3,'p_expressao_booleana','Analisador_Sintatico.py',170),
  ('boolean -> TRUE','boolean',1,'p_boolean','Analisador_Sintatico.py',196),
  ('boolean -> FALSE','boolean',1,'p_boolean','Analisador_Sintatico.py',197),
  ('atribuicao -> ID OP_ATRIB expressao','atribuicao',3,'p_atribuicao','Analisador_Sintatico.py',205),
  ('atribuicao -> atribuicao VIRGULA atribuicao','atribuicao',3,'p_atribuicao','Analisador_Sintatico.py',206),
  ('declaracao_variavel_sem_valores -> KW_FLOAT ID','declaracao_variavel_sem_valores',2,'p_declaracao_sem_valores','Analisador_Sintatico.py',217),
  ('declaracao_variavel_sem_valores -> KW_INT ID','declaracao_variavel_sem_valores',2,'p_declaracao_sem_valores','Analisador_Sintatico.py',218),
  ('criacao_variavel -> tipo ID OP_ATRIB expressao','criacao_variavel',4,'p_criacao_variavel','Analisador_Sintatico.py',234),
  ('criacao_variaveis -> tipo ID OP_ATRIB expressao VIRGULA atribuicao','criacao_variaveis',6,'p_criacao_variaveis','Analisador_Sintatico.py',242),
  ('expressao -> PAR_OPEN expressao PAR_CLOSE','expressao',3,'p_parenteses','Analisador_Sintatico.py',250),
  ('tipo -> KW_INT','tipo',1,'p_tipos','Analisador_Sintatico.py',258),
  ('tipo -> KW_BOOLEAN','tipo',1,'p_tipos','Analisador_Sintatico.py',259),
  ('tipo -> KW_FLOAT','tipo',1,'p_tipos','Analisador_Sintatico.py',260),
  ('tipo -> KW_STRING','tipo',1,'p_tipos','Analisador_Sintatico.py',261),
  ('declaracao_if -> KW_IF expressao_booleana KW_IF_OPEN lista_declaracoes KW_CLOSE','declaracao_if',5,'p_if','Analisador_Sintatico.py',270),
  ('declaracao_if -> KW_IF expressao_booleana KW_IF_OPEN lista_declaracoes KW_ELSE lista_declaracoes KW_CLOSE','declaracao_if',7,'p_if_else','Analisador_Sintatico.py',278),
  ('declaracao_print -> KW_PRINT parametros KW_END_LINE','declaracao_print',3,'p_printa','Analisador_Sintatico.py',286),
  ('declaracao_ler -> KW_INPUT ID','declaracao_ler',2,'p_ler','Analisador_Sintatico.py',294),
  ('declaracao_for -> KW_FOR_OPEN ID EM expressao FACA lista_declaracoes KW_CLOSE','declaracao_for',7,'p_for','Analisador_Sintatico.py',302),
  ('declaracao_while -> KW_WHILE expressao_booleana FACA lista_declaracoes KW_CLOSE','declaracao_while',5,'p_while','Analisador_Sintatico.py',310),
  ('declaracao_funcao -> KW_FUNCTION ID KW_FUNC_OPEN lista_declaracoes KW_CLOSE','declaracao_funcao',5,'p_funcao','Analisador_Sintatico.py',318),
  ('declaracao_funcao -> KW_FUNCTION ID KW_FUNC_OPEN_ARGS lista_declaracoes KW_CLOSE','declaracao_funcao',5,'p_funcao_argumentos','Analisador_Sintatico.py',326),
  ('expressao -> ID KW_FUNC_OPEN_ARGS parametros','expressao',3,'p_function_call','Analisador_Sintatico.py',334),
  ('retorna -> KW_RETURN expressao','retorna',2,'p_return','Analisador_Sintatico.py',342),
  ('parametros -> expressao','parametros',1,'p_parametros','Analisador_Sintatico.py',350),
  ('parametros -> parametros VIRGULA parametros','parametros',3,'p_parametros','Analisador_Sintatico.py',351),
]
